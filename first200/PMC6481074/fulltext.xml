<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Archiving and Interchange DTD v1.2 20190208//EN" "JATS-archivearticle1.dtd"> 
<article xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:mml="http://www.w3.org/1998/Math/MathML" article-type="research-article"><?properties open_access?><?DTDIdentifier.IdentifierValue -//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.1 20151215//EN?><?DTDIdentifier.IdentifierType public?><?SourceDTD.DTDName JATS-journalpublishing1.dtd?><?SourceDTD.Version 1.1?><?ConverterInfo.XSLTName jp2nlmx2.xsl?><?ConverterInfo.Version 1?><front><journal-meta><journal-id journal-id-type="nlm-ta">Methods Protoc</journal-id><journal-id journal-id-type="iso-abbrev">Methods Protoc</journal-id><journal-id journal-id-type="publisher-id">mps</journal-id><journal-title-group><journal-title>Methods and Protocols</journal-title></journal-title-group><issn pub-type="epub">2409-9279</issn><publisher><publisher-name>MDPI</publisher-name></publisher></journal-meta><article-meta><article-id pub-id-type="pmcid">6481074</article-id><article-id pub-id-type="doi">10.3390/mps2010002</article-id><article-id pub-id-type="publisher-id">mps-02-00002</article-id><article-categories><subj-group subj-group-type="heading"><subject>Article</subject></subj-group></article-categories><title-group><article-title>Fast Calculation of Computer Generated Holograms for 3D Photostimulation through Compressive-Sensing Gerchberg&#x02013;Saxton Algorithm</article-title></title-group><contrib-group><contrib contrib-type="author"><name><surname>Pozzi</surname><given-names>Paolo</given-names></name><xref ref-type="aff" rid="af1-mps-02-00002">1</xref><xref ref-type="author-notes" rid="fn1-mps-02-00002">&#x02020;</xref><xref rid="c1-mps-02-00002" ref-type="corresp">*</xref></contrib><contrib contrib-type="author"><name><surname>Maddalena</surname><given-names>Laura</given-names></name><xref ref-type="aff" rid="af2-mps-02-00002">2</xref><xref ref-type="author-notes" rid="fn1-mps-02-00002">&#x02020;</xref></contrib><contrib contrib-type="author"><name><surname>Ceffa</surname><given-names>Nicol&#x000f2;</given-names></name><xref ref-type="aff" rid="af2-mps-02-00002">2</xref></contrib><contrib contrib-type="author"><contrib-id contrib-id-type="orcid" authenticated="true">https://orcid.org/0000-0003-3761-9192</contrib-id><name><surname>Soloviev</surname><given-names>Oleg</given-names></name><xref ref-type="aff" rid="af1-mps-02-00002">1</xref><xref ref-type="aff" rid="af3-mps-02-00002">3</xref></contrib><contrib contrib-type="author"><name><surname>Vdovin</surname><given-names>Gleb</given-names></name><xref ref-type="aff" rid="af1-mps-02-00002">1</xref><xref ref-type="aff" rid="af3-mps-02-00002">3</xref></contrib><contrib contrib-type="author"><name><surname>Carroll</surname><given-names>Elizabeth</given-names></name><xref ref-type="aff" rid="af2-mps-02-00002">2</xref><xref ref-type="author-notes" rid="fn2-mps-02-00002">&#x02021;</xref></contrib><contrib contrib-type="author"><name><surname>Verhaegen</surname><given-names>Michel</given-names></name><xref ref-type="aff" rid="af1-mps-02-00002">1</xref><xref ref-type="author-notes" rid="fn2-mps-02-00002">&#x02021;</xref></contrib></contrib-group><aff id="af1-mps-02-00002"><label>1</label>Delft Center for Systems and Control, Delft University of Technology, Mekelweg 2, 2628 CD Delft, The Netherlands; <email>o.a.soloviev@tudelft.nl</email> (O.S.); <email>g.v.vdovine@tudelft.nl</email> (G.V.); <email>m.verhaegen@tudelft.nl</email> (M.V.)</aff><aff id="af2-mps-02-00002"><label>2</label>Department of Imaging Physics, Delft University of Technology, Lorentzweg 1, 2628 CJ Delft, The Netherlands; <email>l.maddalena@tudelft.nl</email> (L.M.); <email>n.g.ceffa@tudelft.nl</email> (N.C.); <email>e.c.m.carroll@tudelft.nl</email> (E.C.)</aff><aff id="af3-mps-02-00002"><label>3</label>Flexible Optical B.V., Polakweg 10-11, 2288 GG Rijswijk, The Netherlands</aff><author-notes><corresp id="c1-mps-02-00002"><label>*</label>Correspondence: <email>p.pozzi@tudelft.nl</email>; Tel.: +31-152781758</corresp><fn id="fn1-mps-02-00002"><label>&#x02020;</label><p>These authors contributed equally to this work.</p></fn><fn id="fn2-mps-02-00002"><label>&#x02021;</label><p>These authors contributed equally to this work.</p></fn></author-notes><pub-date pub-type="epub"><day>20</day><month>12</month><year>2018</year></pub-date><pub-date pub-type="collection"><month>3</month><year>2019</year></pub-date><volume>2</volume><issue>1</issue><elocation-id>2</elocation-id><history><date date-type="received"><day>29</day><month>10</month><year>2018</year></date><date date-type="accepted"><day>18</day><month>12</month><year>2018</year></date></history><permissions><copyright-statement>&#x000a9; 2018 by the authors.</copyright-statement><copyright-year>2018</copyright-year><license license-type="open-access"><license-p>Licensee MDPI, Basel, Switzerland. This article is an open access article distributed under the terms and conditions of the Creative Commons Attribution (CC BY) license (<ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by/4.0/">http://creativecommons.org/licenses/by/4.0/</ext-link>).</license-p></license></permissions><abstract><p>The use of spatial light modulators to project computer generated holograms is a common strategy for optogenetic stimulation of multiple structures of interest within a three-dimensional volume. A common requirement when addressing multiple targets sparsely distributed in three dimensions is the generation of a points cloud, focusing excitation light in multiple diffraction-limited locations throughout the sample. Calculation of this type of holograms is most commonly performed with either the high-speed, low-performance random superposition algorithm, or the low-speed, high performance Gerchberg&#x02013;Saxton algorithm. This paper presents a variation of the Gerchberg&#x02013;Saxton algorithm that, by only performing iterations on a subset of the data, according to compressive sensing principles, is rendered significantly faster while maintaining high quality outputs. The algorithm is presented in high-efficiency and high-uniformity variants. All source code for the method implementation is available as Supplementary Materials and as open-source software. The method was tested computationally against existing algorithms, and the results were confirmed experimentally on a custom setup for in-vivo multiphoton optogenetics. The results clearly show that the proposed method can achieve computational speed performances close to the random superposition algorithm, while retaining the high performance of the Gerchberg&#x02013;Saxton algorithm, with a minimal hologram quality loss.</p></abstract><kwd-group><kwd>optogenetics</kwd><kwd>spatial light modulators</kwd><kwd>computer generated holograms</kwd></kwd-group></article-meta></front><body><sec sec-type="intro" id="sec1-mps-02-00002"><title>1. Introduction</title><p>The development of optogenetics tools such as channelrhodopsin-2 (ChR2) [<xref rid="B1-mps-02-00002" ref-type="bibr">1</xref>] encompasses optical methods to efficiently stimulate neurons for investigating how neural circuit structure is related to function. In the optical manipulation of neural circuits, proper choice of the light delivery method is crucial. Ideally, the optical system should be capable of targeting a wide range of regions of interest (ROIs), from single synapses to 3D populations of neurons, and provide a time resolution on the order of millisecond along with micrometer spatial resolution [<xref rid="B2-mps-02-00002" ref-type="bibr">2</xref>]. Common techniques to fulfill these requirements can be classified into two main categories: point-scanning methods and parallel excitation methods [<xref rid="B3-mps-02-00002" ref-type="bibr">3</xref>]. The first approach consists of a tightly focused laser beam rastered across the ROIs typically using galvanometric mirrors or acousto-optic devices (AOD) to control the scan pattern. Scanning approaches are limited by the time needed to steer the laser beam: although the scan sequence can be randomized with digital scanners, only one point is ever stimulated at a time [<xref rid="B4-mps-02-00002" ref-type="bibr">4</xref>]. In fact, the ROIs in the neuron under investigation must be activated within a short temporal window to trigger sufficient depolarization to local action potential.</p><p>Alternatively, parallel excitation methods project an image into the sample, simultaneously illuminating all ROIs. Digital micromirror devices (the optically active chip in most digital light projectors) are capable of such image projection, making use of an array micrometer-sized mirrors (&#x0201c;pixels&#x0201d;) to reflect light in or out of the image to form a pattern. These devices modulate amplitude of the incident light, the total power depends on the pattern, and it can be inefficient to generate the relatively high light intensity especially for two-photon stimulation [<xref rid="B5-mps-02-00002" ref-type="bibr">5</xref>].</p><p>Phase-only liquid crystal on silicon spatial light modulators (LCoS-SLM) are commonly used in optogenetics for the generation of complex illumination patterns within the sample. A LCoS-SLM is a two-dimensional, pixelated device capable of modulating the phase of a monochromatic, polarized light beam, without affecting its intensity. When positioned in the pupil plane of a microscope, SLMs can be used to modulate the intensity distribution of light at the image plane. The phase modulation distribution programmed on the SLM to obtain a desired illumination pattern is called a computer-generated hologram (CGH).</p><p>Computer-generated holograms provide a high level of flexibility in the spatial shaping of excitation light in two and three dimensions. The three-dimensional distribution of excitation does not impose a limit on the temporal resolution, which is only dependent on the residence time <inline-formula><mml:math id="mm1"><mml:mrow><mml:msub><mml:mi>R</mml:mi><mml:mi>t</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula>, the refresh rate of the SLM (30&#x02013;60 Hz), and the kinetics of the optogenetics tool [<xref rid="B6-mps-02-00002" ref-type="bibr">6</xref>]. The calculation of CGH is a non-trivial problem and several algorithms are available. In particular, two main classes of algorithms are available: fast Fourier transform based algorithms and multi-spot algorithms.</p><p>While fast Fourier transform algorithms can generate extremely complex illumination patterns in very short times, a strict requirement is that illumination light should be focused either on a two-dimensional plane [<xref rid="B7-mps-02-00002" ref-type="bibr">7</xref>], or at most on a limited number of of two-dimensional planes at different depths [<xref rid="B8-mps-02-00002" ref-type="bibr">8</xref>].</p><p>On the other hand, multi-spot algorithms tend to be slower, but can generate holograms of diffraction limited spots arbitrarily distributed in the three-dimensional field of view of the optical system. These spots can be used to stimulate sub-cellullar regions in the neuron of interest [<xref rid="B9-mps-02-00002" ref-type="bibr">9</xref>]. Alternatively, to use a multi-spot hologram to illuminate ROIs of the size of neurons, the entire illumination pattern can be scanned in a spiral or raster pattern [<xref rid="B10-mps-02-00002" ref-type="bibr">10</xref>], or combined with temporal focusing excitation [<xref rid="B11-mps-02-00002" ref-type="bibr">11</xref>]. Several algorithms exist to calculate a multi-spot hologram, generally representing a tradeoff between computation speed and quality of the hologram. A good summary of the most common algorithms for the generation of multi-spot holograms can be found in [<xref rid="B12-mps-02-00002" ref-type="bibr">12</xref>].</p><p>The most common way to compute a multi-spot CGH is the Gerchberg&#x02013;Saxton (GS) algorithm [<xref rid="B13-mps-02-00002" ref-type="bibr">13</xref>], an iterative procedure of alternating projections allowing for the computation of high quality CGHs in time frames compatible with experimental needs. While the computational cost scales linearly with the amount of generated spots, in a general experimental scenario, calculation of a CGH can take between a few seconds and a couple of minutes. In optogenetics experiments requiring frequent calculation of new stimulation patterns &#x0201c;on-the-fly&#x0201d;, the random superposition (RS) algorithm is sometimes preferred to GS algorithm [<xref rid="B14-mps-02-00002" ref-type="bibr">14</xref>], sacrificing hologram quality to achieve higher computation speeds.</p><p>In this paper, a modified version of the GS algorithm, based on compressive sensing of the pupil function, is presented. The compressive sensing Gerchberg&#x02013;Saxton algorithm (CS-GS) can generate holograms of equal quality to the standard GS algorithm, but reduces the computational cost by more than one order of magnitude, reaching time scales similar to the RS algorithm.</p></sec><sec id="sec2-mps-02-00002"><title>2. Method Description</title><sec id="sec2dot1-mps-02-00002"><title>2.1. Random Superposition and Gerchberg&#x02013;Saxton Algorithm</title><p>The CGH <inline-formula><mml:math id="mm2"><mml:mrow><mml:mrow><mml:mi>&#x003d5;</mml:mi><mml:mo>(</mml:mo><mml:msup><mml:mi>x</mml:mi><mml:mo>&#x02032;</mml:mo></mml:msup><mml:mo>,</mml:mo><mml:msup><mml:mi>y</mml:mi><mml:mo>&#x02032;</mml:mo></mml:msup><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> generating a single spot at coordinates <inline-formula><mml:math id="mm3"><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mi>x</mml:mi><mml:mo>,</mml:mo><mml:mi>y</mml:mi><mml:mo>,</mml:mo><mml:mi>z</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> at the sample can be easily computed through Fourier optics, as a combination of tip, tilt and defocus aberrations
<disp-formula id="FD1-mps-02-00002"><label>(1)</label><mml:math id="mm4"><mml:mrow><mml:mrow><mml:mi>&#x003d5;</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:msup><mml:mi>x</mml:mi><mml:mo>&#x02032;</mml:mo></mml:msup><mml:mo>,</mml:mo><mml:msup><mml:mi>y</mml:mi><mml:mo>&#x02032;</mml:mo></mml:msup><mml:mo>)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mfrac><mml:mrow><mml:mi>&#x003c0;</mml:mi><mml:mi>z</mml:mi></mml:mrow><mml:mrow><mml:mi>&#x003bb;</mml:mi><mml:msup><mml:mi>f</mml:mi><mml:mn>2</mml:mn></mml:msup></mml:mrow></mml:mfrac><mml:mrow><mml:mo>(</mml:mo><mml:msup><mml:mi>x</mml:mi><mml:mrow><mml:mo>&#x02032;</mml:mo><mml:mn>2</mml:mn></mml:mrow></mml:msup><mml:mo>+</mml:mo><mml:msup><mml:mi>y</mml:mi><mml:mrow><mml:mo>&#x02032;</mml:mo><mml:mn>2</mml:mn></mml:mrow></mml:msup><mml:mo>)</mml:mo></mml:mrow><mml:mo>+</mml:mo><mml:mfrac><mml:mrow><mml:mn>2</mml:mn><mml:mi>&#x003c0;</mml:mi></mml:mrow><mml:mrow><mml:mi>&#x003bb;</mml:mi><mml:mi>f</mml:mi></mml:mrow></mml:mfrac><mml:mrow><mml:mo>(</mml:mo><mml:mi>x</mml:mi><mml:msup><mml:mi>x</mml:mi><mml:mo>&#x02032;</mml:mo></mml:msup><mml:mo>+</mml:mo><mml:mi>y</mml:mi><mml:msup><mml:mi>y</mml:mi><mml:mo>&#x02032;</mml:mo></mml:msup><mml:mo>)</mml:mo></mml:mrow><mml:mo>,</mml:mo></mml:mrow></mml:mrow></mml:math></disp-formula>
where <italic>f</italic> is the equivalent focal length of the optical system and <inline-formula><mml:math id="mm5"><mml:mrow><mml:mi>&#x003bb;</mml:mi></mml:mrow></mml:math></inline-formula> is the wavelength.</p><p>In the GS algorithm, the CGH generating a set of <italic>N</italic> spots at coordinates <inline-formula><mml:math id="mm6"><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>y</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>z</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> is assumed to be the phase of the superposition of all the fields generating the individual spots
<disp-formula id="FD2-mps-02-00002"><label>(2)</label><mml:math id="mm7"><mml:mrow><mml:mrow><mml:msub><mml:mi>&#x003d5;</mml:mi><mml:mi>cgh</mml:mi></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:msup><mml:mi>x</mml:mi><mml:mo>&#x02032;</mml:mo></mml:msup><mml:mo>,</mml:mo><mml:msup><mml:mi>y</mml:mi><mml:mo>&#x02032;</mml:mo></mml:msup><mml:mo>)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mo form="prefix">arg</mml:mo><mml:munderover><mml:mo>&#x02211;</mml:mo><mml:mrow><mml:mi>n</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>N</mml:mi></mml:munderover><mml:mfrac><mml:mn>1</mml:mn><mml:mi>N</mml:mi></mml:mfrac><mml:msup><mml:mi mathvariant="normal">e</mml:mi><mml:mrow><mml:mo>&#x02212;</mml:mo><mml:mi mathvariant="normal">i</mml:mi><mml:mo>(</mml:mo><mml:msub><mml:mi>&#x003d5;</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:msup><mml:mi>x</mml:mi><mml:mo>&#x02032;</mml:mo></mml:msup><mml:mo>,</mml:mo><mml:msup><mml:mi>y</mml:mi><mml:mo>&#x02032;</mml:mo></mml:msup><mml:mo>)</mml:mo></mml:mrow><mml:mo>+</mml:mo><mml:msub><mml:mi>&#x003b8;</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo>)</mml:mo></mml:mrow></mml:msup><mml:mo>,</mml:mo></mml:mrow></mml:mrow></mml:math></disp-formula>
where <inline-formula><mml:math id="mm8"><mml:mrow><mml:msub><mml:mi>&#x003b8;</mml:mi><mml:mi>n</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> are some constant phase terms. The only degrees of freedom that can be addressed from the algorithm to optimize the quality of the CGH are the <italic>N</italic> values of <inline-formula><mml:math id="mm9"><mml:mrow><mml:msub><mml:mi>&#x003b8;</mml:mi><mml:mi>n</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula>.</p><p>It is to be noticed that, by simply solving Equation (<xref ref-type="disp-formula" rid="FD2-mps-02-00002">2</xref>) for random values of <inline-formula><mml:math id="mm10"><mml:mrow><mml:msub><mml:mi>&#x003b8;</mml:mi><mml:mi>n</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula>, a low quality CGH can be calculated, without any optimization on the constant phase terms <inline-formula><mml:math id="mm11"><mml:mrow><mml:msub><mml:mi>&#x003b8;</mml:mi><mml:mi>n</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula>. This is known as the RS algorithm, which has computational cost scaling as <inline-formula><mml:math id="mm12"><mml:mrow><mml:mrow><mml:mi>M</mml:mi><mml:mo>&#x000d7;</mml:mo><mml:mi>N</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula> where <italic>M</italic> is the number of SLM pixels.</p><p>To compute optimal values of <inline-formula><mml:math id="mm13"><mml:mrow><mml:msub><mml:mi>&#x003b8;</mml:mi><mml:mi>n</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula>, the GS algorithm proceeds by alternating projections. The initial values of the phases <inline-formula><mml:math id="mm14"><mml:mrow><mml:msubsup><mml:mi>&#x003b8;</mml:mi><mml:mi>n</mml:mi><mml:mn>0</mml:mn></mml:msubsup></mml:mrow></mml:math></inline-formula> are chosen at random, and the initial CGH <inline-formula><mml:math id="mm15"><mml:mrow><mml:msubsup><mml:mi>&#x003d5;</mml:mi><mml:mrow><mml:mi>cgh</mml:mi></mml:mrow><mml:mn>0</mml:mn></mml:msubsup></mml:mrow></mml:math></inline-formula> is computed according to Equation (<xref ref-type="disp-formula" rid="FD2-mps-02-00002">2</xref>).</p><p>At each <italic>k</italic>th iteration, the values of <inline-formula><mml:math id="mm16"><mml:mrow><mml:msubsup><mml:mi>&#x003b8;</mml:mi><mml:mi>n</mml:mi><mml:mi>k</mml:mi></mml:msubsup></mml:mrow></mml:math></inline-formula> are estimated as
<disp-formula id="FD3-mps-02-00002"><label>(3)</label><mml:math id="mm17"><mml:mrow><mml:mrow><mml:msubsup><mml:mi>&#x003b8;</mml:mi><mml:mi>n</mml:mi><mml:mi>k</mml:mi></mml:msubsup><mml:mo>=</mml:mo><mml:mo form="prefix">arg</mml:mo><mml:msub><mml:mo>&#x0222b;</mml:mo><mml:mrow><mml:mi>S</mml:mi><mml:mi>L</mml:mi><mml:mi>M</mml:mi></mml:mrow></mml:msub><mml:msup><mml:mi mathvariant="normal">e</mml:mi><mml:mrow><mml:mo>&#x02212;</mml:mo><mml:mi mathvariant="normal">i</mml:mi><mml:mo>(</mml:mo><mml:msubsup><mml:mi>&#x003d5;</mml:mi><mml:mrow><mml:mi>cgh</mml:mi></mml:mrow><mml:mrow><mml:mi>k</mml:mi><mml:mo>&#x02212;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msubsup><mml:mo>&#x02212;</mml:mo><mml:msub><mml:mi>&#x003d5;</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo>)</mml:mo></mml:mrow></mml:msup><mml:mi>d</mml:mi><mml:msup><mml:mi>x</mml:mi><mml:mo>&#x02032;</mml:mo></mml:msup><mml:mi>d</mml:mi><mml:msup><mml:mi>y</mml:mi><mml:mo>&#x02032;</mml:mo></mml:msup><mml:mo>,</mml:mo></mml:mrow></mml:mrow></mml:math></disp-formula>
and <inline-formula><mml:math id="mm18"><mml:mrow><mml:msubsup><mml:mi>&#x003d5;</mml:mi><mml:mrow><mml:mi>cgh</mml:mi></mml:mrow><mml:mi>k</mml:mi></mml:msubsup></mml:mrow></mml:math></inline-formula> is computed again according to Equation (<xref ref-type="disp-formula" rid="FD2-mps-02-00002">2</xref>).</p><p>Performing a GS algorithm for <italic>K</italic> iterations, while generating <italic>N</italic> spots, on an SLM with <italic>M</italic> pixels has a computational cost scaling as <inline-formula><mml:math id="mm19"><mml:mrow><mml:mrow><mml:mi>K</mml:mi><mml:mo>&#x000d7;</mml:mo><mml:mi>N</mml:mi><mml:mo>&#x000d7;</mml:mo><mml:mi>M</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula>. Empirically, a few tens of iterations are required for convergence of the algorithm.</p></sec><sec id="sec2dot2-mps-02-00002"><title>2.2. Compressive Sensing Approach</title><p>To understand the principle of the CS-GS algorithm described in this paper, it must be noticed that Equation (<xref ref-type="disp-formula" rid="FD2-mps-02-00002">2</xref>) can be rewritten as
<disp-formula id="FD4-mps-02-00002"><label>(4)</label><mml:math id="mm20"><mml:mrow><mml:mrow><mml:mover accent="true"><mml:mi>y</mml:mi><mml:mo stretchy="false">&#x02192;</mml:mo></mml:mover><mml:mo>=</mml:mo><mml:mi>A</mml:mi><mml:msup><mml:mover accent="true"><mml:mi>x</mml:mi><mml:mo stretchy="false">&#x02192;</mml:mo></mml:mover><mml:mi>T</mml:mi></mml:msup><mml:mo>,</mml:mo></mml:mrow></mml:mrow></mml:math></disp-formula>
where <inline-formula><mml:math id="mm21"><mml:mrow><mml:mover accent="true"><mml:mi>y</mml:mi><mml:mo stretchy="false">&#x02192;</mml:mo></mml:mover></mml:mrow></mml:math></inline-formula> is a <italic>N</italic>-dimensional vector representing the field values for each spot, <italic>A</italic> is a <inline-formula><mml:math id="mm22"><mml:mrow><mml:mrow><mml:mi>N</mml:mi><mml:mo>&#x000d7;</mml:mo><mml:mi>M</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula>-dimensional matrix in which each <italic>n</italic>th line contains the value of <inline-formula><mml:math id="mm23"><mml:mrow><mml:mrow><mml:mfrac><mml:mn>1</mml:mn><mml:mi>N</mml:mi></mml:mfrac><mml:msup><mml:mi mathvariant="normal">e</mml:mi><mml:mrow><mml:mo>&#x02212;</mml:mo><mml:mi mathvariant="normal">i</mml:mi><mml:msub><mml:mi>&#x003d5;</mml:mi><mml:mi>n</mml:mi></mml:msub></mml:mrow></mml:msup></mml:mrow></mml:mrow></mml:math></inline-formula> at each <italic>m</italic>th pixel of the SLM, and <inline-formula><mml:math id="mm24"><mml:mrow><mml:mover accent="true"><mml:mi>x</mml:mi><mml:mo stretchy="false">&#x02192;</mml:mo></mml:mover></mml:mrow></mml:math></inline-formula> is a vector of coefficients in the form <inline-formula><mml:math id="mm25"><mml:mrow><mml:mrow><mml:msub><mml:mi>x</mml:mi><mml:mi>m</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:msup><mml:mi mathvariant="normal">e</mml:mi><mml:mrow><mml:mo>&#x02212;</mml:mo><mml:mi mathvariant="normal">i</mml:mi><mml:msub><mml:mi>&#x003d5;</mml:mi><mml:mrow><mml:mi>cgh</mml:mi><mml:mo>,</mml:mo><mml:mi>m</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msup></mml:mrow></mml:mrow></mml:math></inline-formula> where <inline-formula><mml:math id="mm26"><mml:mrow><mml:msub><mml:mi>&#x003d5;</mml:mi><mml:mrow><mml:mi>cgh</mml:mi><mml:mo>,</mml:mo><mml:mi>m</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> is the value of the phase of the CGH at the <italic>m</italic>th pixel of the SLM.</p><p>Since generally <inline-formula><mml:math id="mm27"><mml:mrow><mml:mrow><mml:mi>M</mml:mi><mml:mo>&#x0226b;</mml:mo><mml:mi>N</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula>, this is an under-determined linear system. While an exact solution to the system is provided by Equation (<xref ref-type="disp-formula" rid="FD2-mps-02-00002">2</xref>), according to the principles of compressive sensing [<xref rid="B15-mps-02-00002" ref-type="bibr">15</xref>], and in particular equivalently to <italic>k</italic>-space compressed imaging applications [<xref rid="B16-mps-02-00002" ref-type="bibr">16</xref>], a satisfying solution can be obtained by only sampling a subset of <inline-formula><mml:math id="mm28"><mml:mrow><mml:mrow><mml:mi>c</mml:mi><mml:mi>M</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula> randomly distributed pixels of the SLM, where <inline-formula><mml:math id="mm29"><mml:mrow><mml:mrow><mml:mfrac><mml:mi>N</mml:mi><mml:mi>M</mml:mi></mml:mfrac><mml:mo>&#x0003c;</mml:mo><mml:mi>c</mml:mi><mml:mo>&#x0003c;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:mrow></mml:math></inline-formula>.</p><p>According to this assumption, the first <inline-formula><mml:math id="mm30"><mml:mrow><mml:mrow><mml:mi>K</mml:mi><mml:mo>&#x02212;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:mrow></mml:math></inline-formula> iterations of the GS algorithm can be performed only considering a subset of randomly distributed pixels of the SLM, and only on the <italic>K</italic>th iteration the whole CGH should be computed according to Equation (<xref ref-type="disp-formula" rid="FD2-mps-02-00002">2</xref>). With this algorithm, the computational cost scales as <inline-formula><mml:math id="mm31"><mml:mrow><mml:mrow><mml:mi>K</mml:mi><mml:mo>&#x000d7;</mml:mo><mml:mi>N</mml:mi><mml:mo>&#x000d7;</mml:mo><mml:mi>c</mml:mi><mml:mi>M</mml:mi><mml:mo>+</mml:mo><mml:mi>N</mml:mi><mml:mo>&#x000d7;</mml:mo><mml:mi>M</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula>, which, for <inline-formula><mml:math id="mm32"><mml:mrow><mml:mrow><mml:mi>c</mml:mi><mml:mo>&#x000d7;</mml:mo><mml:mi>K</mml:mi><mml:mo>&#x0226a;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:mrow></mml:math></inline-formula>, can be approximated as just <inline-formula><mml:math id="mm33"><mml:mrow><mml:mrow><mml:mi>N</mml:mi><mml:mo>&#x000d7;</mml:mo><mml:mi>M</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula>, which is equivalent to the RS algorithm cost. Reasonable values of <italic>K</italic> are in the order of <inline-formula><mml:math id="mm34"><mml:mrow><mml:msup><mml:mn>10</mml:mn><mml:mn>2</mml:mn></mml:msup></mml:mrow></mml:math></inline-formula>.</p></sec><sec id="sec2dot3-mps-02-00002"><title>2.3. Weighted Gerchberg&#x02013;Saxton</title><p>The GS algorithm tends to optimize the efficiency of the CGH, but does not guarantee uniform intensity amongst the foci created. In applications in which it is crucial for the CGH to generate spots of equal intensity, a modified version of the GS algorithm, named weighted Gerchberg&#x02013;Saxton (WGS) algorithm [<xref rid="B12-mps-02-00002" ref-type="bibr">12</xref>] can be implemented to improve uniformity, with a minor loss in efficiency. The WGS algorithm has the same computational cost of GS. In the WGS algorithm, <italic>N</italic> additional degrees of freedom are introduced, as intensity weights <inline-formula><mml:math id="mm35"><mml:mrow><mml:msub><mml:mi>&#x003c9;</mml:mi><mml:mi>n</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> in the combination of the spots wavefronts. The initial value of the weights is equal for all spots, and set to <inline-formula><mml:math id="mm36"><mml:mrow><mml:mrow><mml:msubsup><mml:mi>&#x003c9;</mml:mi><mml:mi>n</mml:mi><mml:mn>0</mml:mn></mml:msubsup><mml:mo>=</mml:mo><mml:mfrac><mml:mn>1</mml:mn><mml:mi>N</mml:mi></mml:mfrac></mml:mrow></mml:mrow></mml:math></inline-formula>. Equation (<xref ref-type="disp-formula" rid="FD2-mps-02-00002">2</xref>) is then rewritten as:<disp-formula id="FD5-mps-02-00002"><label>(5)</label><mml:math id="mm37"><mml:mrow><mml:mrow><mml:msubsup><mml:mi>&#x003d5;</mml:mi><mml:mrow><mml:mi>cgh</mml:mi></mml:mrow><mml:mi>k</mml:mi></mml:msubsup><mml:mrow><mml:mo>(</mml:mo><mml:msup><mml:mi>x</mml:mi><mml:mo>&#x02032;</mml:mo></mml:msup><mml:mo>,</mml:mo><mml:msup><mml:mi>y</mml:mi><mml:mo>&#x02032;</mml:mo></mml:msup><mml:mo>)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mo form="prefix">arg</mml:mo><mml:munderover><mml:mo>&#x02211;</mml:mo><mml:mrow><mml:mi>n</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>N</mml:mi></mml:munderover><mml:msubsup><mml:mi>&#x003c9;</mml:mi><mml:mi>n</mml:mi><mml:mi>k</mml:mi></mml:msubsup><mml:msup><mml:mi mathvariant="normal">e</mml:mi><mml:mrow><mml:mo>&#x02212;</mml:mo><mml:mi mathvariant="normal">i</mml:mi><mml:mo>(</mml:mo><mml:msub><mml:mi>&#x003d5;</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo>+</mml:mo><mml:msub><mml:mi>&#x003b8;</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo>)</mml:mo></mml:mrow></mml:msup><mml:mo>.</mml:mo></mml:mrow></mml:mrow></mml:math></disp-formula></p><p>Computing the intensity of each spot as:<disp-formula id="FD6-mps-02-00002"><label>(6)</label><mml:math id="mm38"><mml:mrow><mml:mrow><mml:msubsup><mml:mi>I</mml:mi><mml:mi>n</mml:mi><mml:mi>k</mml:mi></mml:msubsup><mml:mo>=</mml:mo><mml:mfenced separators="" open="|" close="|"><mml:msub><mml:mo>&#x0222b;</mml:mo><mml:mrow><mml:mi>S</mml:mi><mml:mi>L</mml:mi><mml:mi>M</mml:mi></mml:mrow></mml:msub><mml:msup><mml:mi mathvariant="normal">e</mml:mi><mml:mrow><mml:mo>&#x02212;</mml:mo><mml:mi mathvariant="normal">i</mml:mi><mml:mo>(</mml:mo><mml:msubsup><mml:mi>&#x003d5;</mml:mi><mml:mrow><mml:mi>cgh</mml:mi></mml:mrow><mml:mrow><mml:mi>k</mml:mi><mml:mo>&#x02212;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msubsup><mml:mo>&#x02212;</mml:mo><mml:msub><mml:mi>&#x003d5;</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo>)</mml:mo></mml:mrow></mml:msup><mml:mi>d</mml:mi><mml:msup><mml:mi>x</mml:mi><mml:mo>&#x02032;</mml:mo></mml:msup><mml:mi>d</mml:mi><mml:msup><mml:mi>y</mml:mi><mml:mo>&#x02032;</mml:mo></mml:msup></mml:mfenced></mml:mrow></mml:mrow></mml:math></disp-formula>
at each step, the weights are recalculated as:<disp-formula id="FD7-mps-02-00002"><label>(7)</label><mml:math id="mm39"><mml:mrow><mml:mrow><mml:msubsup><mml:mi>&#x003c9;</mml:mi><mml:mi>n</mml:mi><mml:mi>k</mml:mi></mml:msubsup><mml:mo>=</mml:mo><mml:msubsup><mml:mi>&#x003c9;</mml:mi><mml:mi>n</mml:mi><mml:mrow><mml:mi>k</mml:mi><mml:mo>&#x02212;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msubsup><mml:mfrac><mml:mrow><mml:mo>&#x02329;</mml:mo><mml:msubsup><mml:mi>I</mml:mi><mml:mi>n</mml:mi><mml:mi>k</mml:mi></mml:msubsup><mml:mo>&#x0232a;</mml:mo></mml:mrow><mml:msubsup><mml:mi>I</mml:mi><mml:mi>n</mml:mi><mml:mi>k</mml:mi></mml:msubsup></mml:mfrac><mml:mo>.</mml:mo></mml:mrow></mml:mrow></mml:math></disp-formula></p><p>This approach cannot be implemented in a compressive sensing framework, as it quickly diverges for even slightly inaccurate calculations of <inline-formula><mml:math id="mm40"><mml:mrow><mml:msub><mml:mi>I</mml:mi><mml:mi>n</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula>. However, significant improvements can be obtained by running the CS-GS algorithm for K-1 iterations, and only performing a single iteration of the WGS at the end when computing the final CGH. This, however, doubles the computation time compared to CS-GS when <inline-formula><mml:math id="mm41"><mml:mrow><mml:mrow><mml:mi>c</mml:mi><mml:mo>&#x000d7;</mml:mo><mml:mi>K</mml:mi><mml:mo>&#x0226a;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:mrow></mml:math></inline-formula>. For the rest of the paper, this approach is referred to as compressive sensing weighted Gerchberg&#x02013;Saxton algorithm (CS-WGS).</p></sec></sec><sec id="sec3-mps-02-00002"><title>3. Materials and Methods</title><sec id="sec3dot1-mps-02-00002"><title>3.1. Software Implementation</title><p>All algorithms described in <xref ref-type="sec" rid="sec2-mps-02-00002">Section 2</xref> were implemented in Python 2.7 (Python Software Foundation, <uri xlink:href="https://www.python.org/">https://www.python.org/</uri>). All code is available as Supplementary Materials to this article, and in a public repository [<xref rid="B17-mps-02-00002" ref-type="bibr">17</xref>]. While better performances could be achieved implementing the algorithm in a lower level programming language, or through implementation over dedicated hardware (e.g., multi-core threads and GPU implementations), the Python scripting code was chosen to maximize the readability of the code, and provide an easy way to reproduce the results presented. Computational results reported in <xref ref-type="sec" rid="sec4dot1-mps-02-00002">Section 4.1</xref> were achieved with a mid-range desktop computer (Intel Core i5-4690 3.5 Ghz, 8 GB of memory, 64-bit Windows 7 operating system).</p></sec><sec id="sec3dot2-mps-02-00002"><title>3.2. Experimental Setup</title><p>For the experimental investigation of the algorithms performances, we employed the system shown in <xref ref-type="fig" rid="mps-02-00002-f001">Figure 1</xref>. two-photon excitation (TPE) beam (<inline-formula><mml:math id="mm42"><mml:mrow><mml:mi>&#x003bb;</mml:mi></mml:mrow></mml:math></inline-formula> = 800 nm, diameter = 0.8 mm) from a Ti:Sapphire laser passes a beam expander composed by two lenses to uniformly illuminate the active area of a reflective SLM. The SLM is conjugated with the objective back aperture via lenses L1 and L2. An inverse pinhole blocks the zero-order beam while the CGH is projected onto the sample (Rhodamine 6 G uniformly coated slide, thickness 1.7 mm, Thorlabs; Newton, NJ, USA). Two-photon excitation fluorescence is collected by the same objective and, thanks to a short-pass dichroic mirror and a tube lens, is recorded by a complementary metal oxide semiconductor (CMOS) camera. To acquire images of three-dimensional holograms, a deformable mirror (DM-40, Thorlabs; Newton, NJ, USA) was added to the detection path, conjugated with the objective back aperture.</p></sec></sec><sec sec-type="results" id="sec4-mps-02-00002"><title>4. Results</title><sec id="sec4dot1-mps-02-00002"><title>4.1. Computational Results</title><p>The CS-GS algorithm was tested against the regular GS algorithm, as an upper limit of performance, and the random superposition algorithm, as an expected lower limit of performance. The performance metric used to evaluate the quality of the CGHs were, as in [<xref rid="B12-mps-02-00002" ref-type="bibr">12</xref>], the efficiency and uniformity of the obtained patterns. The efficiency <italic>e</italic> of the CGH is computed as the fraction of the total intensity directed at the generated spots. The uniformity <italic>u</italic> is calculated as
<disp-formula id="FD8-mps-02-00002"><label>(8)</label><mml:math id="mm43"><mml:mrow><mml:mrow><mml:mi>u</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn><mml:mo>&#x02212;</mml:mo><mml:mfrac><mml:mrow><mml:msub><mml:mi>I</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mi>a</mml:mi><mml:mi>x</mml:mi></mml:mrow></mml:msub><mml:mo>&#x02212;</mml:mo><mml:msub><mml:mi>I</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mi>i</mml:mi><mml:mi>n</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mrow><mml:msub><mml:mi>I</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mi>a</mml:mi><mml:mi>x</mml:mi></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:msub><mml:mi>I</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mi>i</mml:mi><mml:mi>n</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mfrac><mml:mo>,</mml:mo></mml:mrow></mml:mrow></mml:math></disp-formula>
where <inline-formula><mml:math id="mm44"><mml:mrow><mml:msub><mml:mi>I</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mi>a</mml:mi><mml:mi>x</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> and <inline-formula><mml:math id="mm45"><mml:mrow><mml:msub><mml:mi>I</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mi>i</mml:mi><mml:mi>n</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> are the intensities of the brightest and dimmest spot generated by the CGH.</p><p>As a computational test, CGHs were calculated for a random three-dimensional distribution of 100 spots, simulating a reasonable requirement for a optogenetics experiment, and for a grid of <inline-formula><mml:math id="mm46"><mml:mrow><mml:mrow><mml:mn>10</mml:mn><mml:mo>&#x000d7;</mml:mo><mml:mn>10</mml:mn></mml:mrow></mml:mrow></mml:math></inline-formula> spots in the image plane, representing a worst-case scenario for the uniformity of the pattern, where WGS should perform much better than GS. All variants of the GS algorithm were run for 50 iterations.</p><p>Due to the randomized initialization of the values of <inline-formula><mml:math id="mm47"><mml:mrow><mml:msub><mml:mi>&#x003b8;</mml:mi><mml:mi>n</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula>, the final values of <italic>u</italic> and <italic>e</italic> of the CGH can vary slightly for different initializations. All the reported measurements were therefore performed by computing each CGH 10 times, with different random initializations, and calculating the mean and standard deviation of <italic>u</italic> and <italic>e</italic>.</p><p>The results, reported in <xref ref-type="fig" rid="mps-02-00002-f002">Figure 2</xref> and <xref ref-type="fig" rid="mps-02-00002-f003">Figure 3</xref>, show how the CS-GS algorithm has performances virtually identical to GS with compression factors up to <inline-formula><mml:math id="mm48"><mml:mrow><mml:mrow><mml:mi>c</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn><mml:mo>/</mml:mo><mml:mn>32</mml:mn></mml:mrow></mml:mrow></mml:math></inline-formula>, while providing an improvement in computational time of more than one order of magnitude. Moreover, CS-GS still greatly outperforms RS up to extreme compression factors.</p><p>As far as the weighted version is concerned, CS-WGS, only performing a single weighted iteration, does not perform as well as the regular version of WGS, especially in the case of the generation of regular geometrical patterns of spots. However, it still greatly outperforms GS in uniformity, and its deficit in uniformity compared to WGS can be considered practically negligible in the case of randomly distributed patterns of spots.</p><p>To rule out the possibility that the computation time difference between the standard and compressed sensing versions of the algorithms could be partially compensated by different convergence rates, efficiency and uniformity were estimated as a function of the iteration number. Since, for the considered experimental parameters, a compression factor of <inline-formula><mml:math id="mm49"><mml:mrow><mml:mrow><mml:mi>c</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn><mml:mo>/</mml:mo><mml:mn>32</mml:mn></mml:mrow></mml:mrow></mml:math></inline-formula> appears to represent the best compromise between speed and performances for both CS-GS and CS-WGS, such a compression parameter was used for the convergence speed comparison. As shown in <xref ref-type="fig" rid="mps-02-00002-f002">Figure 2</xref> and <xref ref-type="fig" rid="mps-02-00002-f003">Figure 3</xref>, no significant difference in convergence speed can be observed. It is apparent from the convergence graphs that CS-GS and CS-WGS only differ from each other in the last iteration, as described in <xref ref-type="sec" rid="sec2dot3-mps-02-00002">Section 2.3</xref>. This causes the sudden discontinuity in the CS-WGS convergence graph.</p></sec><sec id="sec4dot2-mps-02-00002"><title>4.2. Experimental Results</title><p>To experimentally compare our methods to RS and iterative projections algorithms, we used each of them to compute the same 2D multi-spot CGH. This pattern contains 25 points arranged in letters shape for the initials of the laboratory institution (Technische Universiteit Delft, TUD) and extending over the complete available field of view. While all iteratively generated CGH were obtained with 100 iterations, we also operated WGS with 200 iterations and considered it as reference term in the performances evaluation. All the compressive sensing methods were computed with a sub-sampling value of <inline-formula><mml:math id="mm50"><mml:mrow><mml:mrow><mml:mn>0.05</mml:mn></mml:mrow></mml:mrow></mml:math></inline-formula>.</p><p>As qualitatively shown in <xref ref-type="fig" rid="mps-02-00002-f004">Figure 4</xref>, panels A&#x02013;D CS-WGS and WGS outperform RS. The intensity profile from a line of points in each image (<xref ref-type="fig" rid="mps-02-00002-f004">Figure 4</xref>, panel E) highlights the lack of excitation for some ROIs in the RS image (the peak corresponding to the third point is almost absent), while all other methods provide comparable results in terms of points intensity.</p><p>To quantitatively classify the performances of all algorithms including GS and CS-GS, we estimated the relative brightness and the intensity uniformity across the FOV of the different patterns. For each method, a stack of five images was acquired, and then, on the averaged image, seven random points were selected and fitted with 2D Gaussian profiles. The peak values from the fit are averaged and normalized for each method to produce the relative brightness. The brightness analysis (<xref ref-type="fig" rid="mps-02-00002-f004">Figure 4</xref>, panel F) confirmed RS as the least efficient method, while all others show results comparable with the reference WGS.</p><p>From the standard deviation of the peaks values (<xref ref-type="fig" rid="mps-02-00002-f004">Figure 4</xref>, panel G), we quantified the uniformity of the illumination. As anticipated in the computational results, WGS and CS-WGS algorithms are reaching uniformities that are very close to the golden standard (around 90%) at a fraction of the computational cost. Furthermore, we obtained a slightly higher uniformity for CS-WGS compared to WGS (run with the same number of iterations) corroborating that the deficit in uniformity found in the computational results is practically negligible for randomly distributed patterns.</p><p>Additionally, a separate dataset with spots distributed in three dimensions is reported in <xref ref-type="fig" rid="mps-02-00002-f005">Figure 5</xref>, to prove the performances of the method in three dimensions. As can be observed, the WGS and CS-WGS images are practically indistinguishable, while RS, despite its minimal time saving compared to CS-WGS, has visibly worse performance, with significantly non uniform spots in the distribution.</p></sec></sec><sec sec-type="discussion" id="sec5-mps-02-00002"><title>5. Discussion</title><p>In this paper, we demonstrate, both computationally and experimentally, how the implementation of compressive sensing principles to the Gerchberg&#x02013;Saxton algorithm for the generation of multi-spot holograms, in both its classic and weighted forms, can provide a dramatic decrease in computation time, without significantly affecting its performance. This method could therefore represent a standard in spatial light modulation based optogenetics stimulation, where fast and reliable generation of three-dimensional multi-spot patterns is key for a successful experiment. To facilitate implementation and testing for the neuroscience community, Python implementations of the RS, GS, WGS, CS-GS and CS-WGS algorithms are available as Supplementary Materials to this paper and in a public repository [<xref rid="B17-mps-02-00002" ref-type="bibr">17</xref>].</p></sec></body><back><ack><title>Acknowledgments</title><p>The work of P.P. and O.S. was funded by the European Research Council under the European Union&#x02019;s Seventh Framework Programme (FP7/2007&#x02013;2013)/ERC grant agreement No. 339681. The work of G. Vdovin and O. Soloviev was partially funded by Flexible Optical B.V.</p></ack><app-group><app id="app1-mps-02-00002"><title>Supplementary Materials</title><p>The following are available online at <uri xlink:href="http://www.mdpi.com/2409-9279/2/1/2/s1">http://www.mdpi.com/2409-9279/2/1/2/s1</uri>, Python code S1: fast_gs_practical.py.</p><supplementary-material content-type="local-data" id="mps-02-00002-s001"><media xlink:href="mps-02-00002-s001.zip"><caption><p>Click here for additional data file.</p></caption></media></supplementary-material></app></app-group><notes><title>Author Contributions</title><p>P.P. conceived and designed the method, wrote the computer code and performed the simulations; L.M. wrote the Introduction; L.M. and N.C. performed the practical experiments; O.S., M.V. and G.V. helped in the formalization of the theoretical framework; M.V. and G.V. supervised and provided funding for the theoretical work; and E.C. supervised and provided funding for the experimental work.</p></notes><notes><title>Funding</title><p>This research was funded by the European Research Council, grant number 339681.</p></notes><notes notes-type="COI-statement"><title>Conflicts of Interest</title><p>The authors declare no conflict of interest. The founding sponsors had no role in the design of the study; in the collection, analyses, or interpretation of data; in the writing of the manuscript, and in the decision to publish the results.</p></notes><ref-list><title>References</title><ref id="B1-mps-02-00002"><label>1.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Hegemann</surname><given-names>P.</given-names></name><name><surname>M&#x000f6;glich</surname><given-names>A.</given-names></name></person-group><article-title>Channelrhodopsin engineering and exploration of new optogenetic tools</article-title><source>Nat. Methods</source><year>2011</year><volume>8</volume><fpage>39</fpage><lpage>42</lpage><pub-id pub-id-type="doi">10.1038/nmeth.f.327</pub-id><?supplied-pmid 21191371?><pub-id pub-id-type="pmid">21191371</pub-id></element-citation></ref><ref id="B2-mps-02-00002"><label>2.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Emiliani</surname><given-names>V.</given-names></name><name><surname>Cohen</surname><given-names>A.</given-names></name><name><surname>Deisseroth</surname><given-names>K.</given-names></name><name><surname>Hausser</surname><given-names>M.</given-names></name></person-group><article-title>All-optical interrogation of neural circuits</article-title><source>J. Neurosci.</source><year>2015</year><volume>35</volume><fpage>13917</fpage><lpage>13926</lpage><pub-id pub-id-type="doi">10.1523/JNEUROSCI.2916-15.2015</pub-id><?supplied-pmid 26468193?><pub-id pub-id-type="pmid">26468193</pub-id></element-citation></ref><ref id="B3-mps-02-00002"><label>3.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Oron</surname><given-names>D.</given-names></name><name><surname>Papagiakoumou</surname><given-names>E.</given-names></name><name><surname>Anselmi</surname><given-names>F.</given-names></name><name><surname>Emiliani</surname><given-names>V.</given-names></name></person-group><article-title>Two-photon optogenetics</article-title><source>Prog. Brain Res.</source><year>2012</year><volume>196</volume><fpage>119</fpage><lpage>143</lpage><?supplied-pmid 22341324?><pub-id pub-id-type="pmid">22341324</pub-id></element-citation></ref><ref id="B4-mps-02-00002"><label>4.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Nikolenko</surname><given-names>V.</given-names></name><name><surname>Watson</surname><given-names>O.B.</given-names></name><name><surname>Araya</surname><given-names>R.</given-names></name><name><surname>Woodruff</surname><given-names>A.</given-names></name><name><surname>Peterka</surname><given-names>D.S.</given-names></name><name><surname>Yuste</surname><given-names>R.</given-names></name></person-group><article-title>SLM Microscopy: Scanless two-photon imaging and photostimulation with Spatial Light Modulators</article-title><source>Front. Neural Circ.</source><year>2008</year><volume>2</volume><fpage>5</fpage><pub-id pub-id-type="doi">10.3389/neuro.04.005.2008</pub-id><?supplied-pmid 19129923?><pub-id pub-id-type="pmid">19129923</pub-id></element-citation></ref><ref id="B5-mps-02-00002"><label>5.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Dal Maschio</surname><given-names>M.</given-names></name><name><surname>Difato</surname><given-names>F.</given-names></name><name><surname>Beltramo</surname><given-names>R.</given-names></name><name><surname>Blau</surname><given-names>A.</given-names></name><name><surname>Benfenati</surname><given-names>F.</given-names></name><name><surname>Fellin</surname><given-names>T.</given-names></name></person-group><article-title>Simultaneous two-photon imaging and photo-stimulation with structured light illumination</article-title><source>Opt. Express</source><year>2010</year><volume>18</volume><fpage>18720</fpage><lpage>18731</lpage><pub-id pub-id-type="doi">10.1364/OE.18.018720</pub-id><?supplied-pmid 20940765?><pub-id pub-id-type="pmid">20940765</pub-id></element-citation></ref><ref id="B6-mps-02-00002"><label>6.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Vaziri</surname><given-names>A.</given-names></name><name><surname>Emiliani</surname><given-names>V.</given-names></name></person-group><article-title>Reshaping the optical dimension in optogenetics</article-title><source>Nat. Methods</source><year>2008</year><volume>5</volume><fpage>128</fpage><lpage>137</lpage><pub-id pub-id-type="doi">10.1016/j.conb.2011.11.011</pub-id><?supplied-pmid 22209216?><pub-id pub-id-type="pmid">22209216</pub-id></element-citation></ref><ref id="B7-mps-02-00002"><label>7.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Lutz</surname><given-names>C.</given-names></name><name><surname>Otis</surname><given-names>S.T.</given-names></name><name><surname>DeSars</surname><given-names>V.</given-names></name><name><surname>Charpak</surname><given-names>S.</given-names></name><name><surname>Di Gregori</surname><given-names>D.A.</given-names></name><name><surname>Emiliani</surname><given-names>V.</given-names></name></person-group><article-title>Holographic photolysis of caged neurotransmitters</article-title><source>Curr. Opt. Neurobiol.</source><year>2012</year><volume>22</volume><fpage>821</fpage><pub-id pub-id-type="doi">10.1038/nmeth.1241</pub-id><?supplied-pmid 19160517?><pub-id pub-id-type="pmid">19160517</pub-id></element-citation></ref><ref id="B8-mps-02-00002"><label>8.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Zhang</surname><given-names>J.</given-names></name><name><surname>P&#x000e9;gard</surname><given-names>N.</given-names></name><name><surname>Zhong</surname><given-names>J.</given-names></name><name><surname>Adesnik</surname><given-names>H.</given-names></name><name><surname>Waller</surname><given-names>L.</given-names></name></person-group><article-title>3D computer-generated holography by non-convex optimization</article-title><source>Optica</source><year>2017</year><volume>4</volume><fpage>1306</fpage><lpage>1313</lpage><pub-id pub-id-type="doi">10.1364/OPTICA.4.001306</pub-id></element-citation></ref><ref id="B9-mps-02-00002"><label>9.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Anselmi</surname><given-names>A.</given-names></name><name><surname>Ventalona</surname><given-names>C.</given-names></name><name><surname>B&#x000e8;gue</surname><given-names>A.</given-names></name><name><surname>Ogden</surname><given-names>D.</given-names></name><name><surname>Emiliani</surname><given-names>V.</given-names></name></person-group><article-title>Three-dimensional imaging and photostimulation by remote-focusing and holographic light patterning</article-title><source>Proc. Natl. Acad. Sci. USA</source><year>2011</year><volume>108</volume><pub-id pub-id-type="doi">10.1073/pnas.1109111108</pub-id><?supplied-pmid 22074779?><pub-id pub-id-type="pmid">22074779</pub-id></element-citation></ref><ref id="B10-mps-02-00002"><label>10.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Packer</surname><given-names>A.M.</given-names></name><name><surname>Russell</surname><given-names>L.E.</given-names></name><name><surname>Dalgleish</surname><given-names>H.W.</given-names></name><name><surname>H&#x000e4;usser</surname><given-names>M.</given-names></name></person-group><article-title>Simultaneous all-optical manipulation and recording of neural circuit activity with cellular resolution in vivo</article-title><source>Nat. Methods</source><year>2014</year><volume>12</volume><fpage>140</fpage><lpage>146</lpage><pub-id pub-id-type="doi">10.1038/nmeth.3217</pub-id><?supplied-pmid 25532138?><pub-id pub-id-type="pmid">25532138</pub-id></element-citation></ref><ref id="B11-mps-02-00002"><label>11.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>P&#x000e9;gard</surname><given-names>N.C.</given-names></name><name><surname>Mardinly</surname><given-names>A.R.</given-names></name><name><surname>Oldenburg</surname><given-names>I.A.</given-names></name><name><surname>Sridharan</surname><given-names>S.</given-names></name><name><surname>Waller</surname><given-names>L.</given-names></name><name><surname>Adesnik</surname><given-names>H.</given-names></name></person-group><article-title>Three-dimensional scanless holographic optogenetics with temporal focusing (3D-SHOT)</article-title><source>Nat. Commun.</source><year>2017</year><volume>8</volume><fpage>1228</fpage><pub-id pub-id-type="doi">10.1038/s41467-017-01031-3</pub-id><?supplied-pmid 29089483?><pub-id pub-id-type="pmid">29089483</pub-id></element-citation></ref><ref id="B12-mps-02-00002"><label>12.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Di Leonardo</surname><given-names>R.</given-names></name><name><surname>Ianni</surname><given-names>F.</given-names></name><name><surname>Ruocco</surname><given-names>G.</given-names></name></person-group><article-title>Computer generation of optimal holograms for optical trap arrays</article-title><source>Opt. Express</source><year>2007</year><volume>15</volume><fpage>1913</fpage><lpage>1922</lpage><pub-id pub-id-type="doi">10.1364/OE.15.001913</pub-id><?supplied-pmid 19532430?><pub-id pub-id-type="pmid">19532430</pub-id></element-citation></ref><ref id="B13-mps-02-00002"><label>13.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Gerchberg</surname><given-names>R.W.</given-names></name><name><surname>Saxton</surname><given-names>W.O.</given-names></name></person-group><article-title>A practical algorithm for the determination of phase from image and diffraction plane pictures</article-title><source>Optik</source><year>1972</year><volume>35</volume><fpage>237</fpage><lpage>246</lpage></element-citation></ref><ref id="B14-mps-02-00002"><label>14.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Reutsky-Gefen</surname><given-names>I.</given-names></name><name><surname>Golan</surname><given-names>L.</given-names></name><name><surname>Farah</surname><given-names>N.</given-names></name><name><surname>Schejter</surname><given-names>A.</given-names></name><name><surname>Tsur</surname><given-names>L.</given-names></name><name><surname>Brosh</surname><given-names>I.</given-names></name><name><surname>Shoham</surname><given-names>S.</given-names></name></person-group><article-title>Holographic optogenetic stimulation of patterned neuronal activity for vision restoration</article-title><source>Nat. Commun.</source><year>2013</year><volume>4</volume><fpage>1509</fpage><pub-id pub-id-type="doi">10.1038/ncomms2500</pub-id><?supplied-pmid 23443537?><pub-id pub-id-type="pmid">23443537</pub-id></element-citation></ref><ref id="B15-mps-02-00002"><label>15.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Cand&#x000e8;s</surname><given-names>E.</given-names></name><name><surname>Romberg</surname><given-names>J.</given-names></name><name><surname>Tao</surname><given-names>T.</given-names></name></person-group><article-title>Robust uncertainty principles: Exact signal reconstruction from highly incomplete frequency information</article-title><source>IEEE Trans. Inf. Theory</source><year>2006</year><volume>52</volume><fpage>489</fpage><lpage>509</lpage><pub-id pub-id-type="doi">10.1109/TIT.2005.862083</pub-id></element-citation></ref><ref id="B16-mps-02-00002"><label>16.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Lustig</surname><given-names>M.</given-names></name><name><surname>Donoho</surname><given-names>D.L.</given-names></name><name><surname>Santos</surname><given-names>J.M.</given-names></name><name><surname>Pauly</surname><given-names>J.M.</given-names></name></person-group><article-title>Compressed sensing MRI</article-title><source>IEEE Signal Process. Mag.</source><year>2008</year><volume>25</volume><fpage>72</fpage><lpage>82</lpage><pub-id pub-id-type="doi">10.1109/MSP.2007.914728</pub-id></element-citation></ref><ref id="B17-mps-02-00002"><label>17.</label><element-citation publication-type="web"><article-title>Cs-gs.py</article-title><comment>Available online: <ext-link ext-link-type="uri" xlink:href="https://github.com/csi-dcsc/compressive-sensing-Gerchberg-Saxton">https://github.com/csi-dcsc/compressive-sensing-Gerchberg-Saxton</ext-link></comment><date-in-citation content-type="access-date" iso-8601-date="2018-10-29">(accessed on 29 October 2018)</date-in-citation></element-citation></ref></ref-list></back><floats-group><fig id="mps-02-00002-f001" orientation="portrait" position="float"><label>Figure 1</label><caption><p>Scheme (not to scale) of two-photon excitation computer-generated hologram (CGH) setup. Ti:Sapphire laser (MIRA 900-F, Coherent; Santa Clara, CA, USA), beam expander (BE) composed by two lenses (<inline-formula><mml:math id="mm51"><mml:mrow><mml:mrow><mml:mi>f</mml:mi><mml:mo>=</mml:mo><mml:mn>25</mml:mn></mml:mrow></mml:mrow></mml:math></inline-formula> mm and <inline-formula><mml:math id="mm52"><mml:mrow><mml:mrow><mml:mi>f</mml:mi><mml:mo>=</mml:mo><mml:mn>150</mml:mn></mml:mrow></mml:mrow></mml:math></inline-formula> mm, respectively), reflective spatial light modulator (SLM, 1920 &#x000d7; 1152; pixel pitch, 9.2 <inline-formula><mml:math id="mm53"><mml:mrow><mml:mi mathvariant="sans-serif">&#x003bc;</mml:mi></mml:mrow></mml:math></inline-formula>m Meadowlark Optics; Frederick, CO, USA), lens L1 (<inline-formula><mml:math id="mm54"><mml:mrow><mml:mrow><mml:mi>f</mml:mi><mml:mo>=</mml:mo><mml:mn>250</mml:mn></mml:mrow></mml:mrow></mml:math></inline-formula> mm) and L2 (<inline-formula><mml:math id="mm55"><mml:mrow><mml:mrow><mml:mi>f</mml:mi><mml:mo>=</mml:mo><mml:mn>500</mml:mn></mml:mrow></mml:mrow></mml:math></inline-formula> mm), inverse pinhole (IP), objective (EO, Olympus 20X, 1.0 NA, water immersion, Olympus; Tokyo, Japan), dichroic mirror (DM) with cutoff wavelength at 700 nm (FF01-7200/SDi01, Semrock; Rochester, NY, USA), tube lens L3 (<inline-formula><mml:math id="mm56"><mml:mrow><mml:mrow><mml:mi>f</mml:mi><mml:mo>=</mml:mo><mml:mn>200</mml:mn></mml:mrow></mml:mrow></mml:math></inline-formula> mm), CMOS camera (IDS UI-3270CP, IDS; Obersulm, Germany).</p></caption><graphic xlink:href="mps-02-00002-g001"/></fig><fig id="mps-02-00002-f002" orientation="portrait" position="float"><label>Figure 2</label><caption><p>Algorithms performance in the case of the generation of a regular 2D array of 100 spots: (<bold>A</bold>,<bold>B</bold>) report the efficiency metric as a function of the subsampling parameter <inline-formula><mml:math id="mm57"><mml:mrow><mml:mrow><mml:mn>1</mml:mn><mml:mo>/</mml:mo><mml:mi>c</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula> and the convergence graph at <inline-formula><mml:math id="mm58"><mml:mrow><mml:mrow><mml:mi>c</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn><mml:mo>/</mml:mo><mml:mn>32</mml:mn></mml:mrow></mml:mrow></mml:math></inline-formula> for the CS-GS and the CS-WGS algorithm. (<bold>C</bold>,<bold>D</bold>) report uniformity metric and convergence for the same dataset. For comparison, horizontal bars represent the interval of confidence of performance of GS, WGS, and RS algorithm. (<bold>E</bold>) reports the improvement in computation time as a function of <inline-formula><mml:math id="mm59"><mml:mrow><mml:mrow><mml:mn>1</mml:mn><mml:mo>/</mml:mo><mml:mi>c</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula>. (<bold>F</bold>) reports the efficiency and uniformity represented in absolute scale to better represent overall performance.</p></caption><graphic xlink:href="mps-02-00002-g002"/></fig><fig id="mps-02-00002-f003" orientation="portrait" position="float"><label>Figure 3</label><caption><p>Algorithms performance in the case of the generation of a random 3D distribution of 100 spots: (<bold>A</bold>,<bold>B</bold>) report the efficiency metric as a function of the subsampling parameter <inline-formula><mml:math id="mm60"><mml:mrow><mml:mrow><mml:mn>1</mml:mn><mml:mo>/</mml:mo><mml:mi>c</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula> and the convergence graph at <inline-formula><mml:math id="mm61"><mml:mrow><mml:mrow><mml:mi>c</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn><mml:mo>/</mml:mo><mml:mn>32</mml:mn></mml:mrow></mml:mrow></mml:math></inline-formula> for the CS-GS and the CS-WGS algorithm. (<bold>C</bold>,<bold>D</bold>) report uniformity metric and convergence for the same dataset. For comparison, horizontal bars represent the interval of confidence of performance of GS, WGS, and RS algorithm. (<bold>E</bold>) reports the improvement in computation time as a function of <inline-formula><mml:math id="mm62"><mml:mrow><mml:mrow><mml:mn>1</mml:mn><mml:mo>/</mml:mo><mml:mi>c</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula>. (<bold>F</bold>) reports the efficiency and uniformity represented in absolute scale to better represent overall performance.</p></caption><graphic xlink:href="mps-02-00002-g003"/></fig><fig id="mps-02-00002-f004" orientation="portrait" position="float"><label>Figure 4</label><caption><p>Experimental results: (<bold>A</bold>&#x02013;<bold>D</bold>) Two photon excitation fluorescence images of multi-spot CGHs generated, respectively, with WGS 200 iterations, RS, WGS and CS-WGS algorithms; (<bold>E</bold>) intensity profile from a single line in panel (<bold>D</bold>); (<bold>F</bold>) relative brightness for all methods explored; and (<bold>G</bold>) uniformity across the field of view in the peak intensities for all methods explored.</p></caption><graphic xlink:href="mps-02-00002-g004"/></fig><fig id="mps-02-00002-f005" orientation="portrait" position="float"><label>Figure 5</label><caption><p>Experimental results for a three-dimensional hologram. CS-WGS and WGS were computed over 100 iterations, while CS-WGS had a compression factor of 0.05. Computation times were, respectively, 5 s, 40 s and 456 s for RS, WGS and CS-WGS. All images are reported on the same intensity scale. It can be noticed that, while the WGS and CS-WGS images are practically identical, RS has some spots with significantly different intensities (highlighted by the red arrows).</p></caption><graphic xlink:href="mps-02-00002-g005"/></fig></floats-group></article>